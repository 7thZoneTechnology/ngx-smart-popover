{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,kCAAkC,6BAA6B,yBAAyB,GAAG,qBAAqB,kBAAkB,uBAAuB,mBAAmB,sBAAsB,oBAAoB,0BAA0B,0BAA0B,8BAA8B,sBAAsB,GAAG,yBAAyB,mBAAmB,sBAAsB,GAAG,OAAO,gBAAgB,GAAG,C;;;;;;;;;;;ACAha,8qJAA8qJ,U;;;;;;;;;;;;;;;;;;;;;ACApoJ;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AACG;AAalD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,+DAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACjBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".jumbotron img {\\n    vertical-align: bottom;\\n    margin-right: 10px;\\n}\\n\\n.center-content {\\n    width: 100%;\\n    max-width: 800px;\\n    margin: auto;\\n    padding: 0 15px;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    justify-content: center;\\n    flex-wrap: wrap;\\n}\\n\\n.center-content img {\\n    margin: 30px;\\n    cursor: pointer;\\n}\\n\\np {\\n    margin: 0;\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"jumbotron text-center\\\">\\n    <h1>\\n        <img height=\\\"70\\\" src=\\\"assets/popover.png\\\">ngx-smart-popover Demo\\n    </h1>\\n</div>\\n\\n\\n\\n<h3 class=\\\"text-center\\\">Hover the emojis!</h3>\\n<div class=\\\"center-content\\\">\\n    <popover-content #tearsRef>\\n        <h2>ðŸ˜‚ Face With Tears of Joy</h2>\\n        A yellow face with a big grin, uplifted eyebrows, and smiling eyes, each shedding a tear from laughing so hard. Widely used to show something is funny or pleasing.\\n    </popover-content>\\n    <img height=\\\"75\\\" [popover]=\\\"tearsRef\\\" src=\\\"assets/tears.png\\\">\\n    <popover-content #eyebrowRef>\\n        <h2>ðŸ¤¨ Face With Raised Eyebrow</h2>\\n        A face with a neutral mouth and single eyebrow raised. May be used to denote scepticism, disbelief, or disapproval.\\n    </popover-content>\\n    <img height=\\\"75\\\" [popover]=\\\"eyebrowRef\\\" popoverPlacement=\\\"top-right\\\" src=\\\"assets/eyebrow.png\\\">\\n    <popover-content #droolRef>\\n        <h2>ðŸ¤¤ Drooling Face</h2>\\n        A face shown with drool dripping from one side of the mouth. May be used as a display of desire in a person, object or concept. Previously displayed with a startled appearance on Samsung devices.\\n    </popover-content>\\n    <img height=\\\"75\\\" [popover]=\\\"droolRef\\\" popoverPlacement=\\\"right\\\" src=\\\"assets/drool.png\\\">\\n    <popover-content #kissRef>\\n        <h2>ðŸ˜˜ Face Blowing a Kiss</h2>\\n        An emoji face blowing a kiss, usually shown with one eye open and the other eye winking. A heart is shown leaving the kissing mouth.\\n    </popover-content>\\n    <img height=\\\"75\\\" [popover]=\\\"kissRef\\\" popoverPlacement=\\\"bottom-right\\\" src=\\\"assets/kiss.png\\\">\\n    <popover-content #persevereRef>\\n        <h2>ðŸ˜£ Persevering Face</h2>\\n        Face with scrunched up and closed eyes, frowning. Used to show helplessness in a situation. May be on the verge of tears.\\n    </popover-content>\\n    <img height=\\\"75\\\" [popover]=\\\"persevereRef\\\" popoverPlacement=\\\"bottom\\\" src=\\\"assets/persevere.png\\\">\\n    <popover-content #sunglassesRef>\\n        <h2>ðŸ˜Ž Smiling Face With Sunglasses</h2>\\n        A face smiling and wearing dark sunglasses that is used to denote a sense of cool. The <a href=\\\"https://emojipedia.org/nerd-face/\\\" target=\\\"_blank\\\">nerd face emoji</a> is a similar face, but with regular glasses.\\n    </popover-content>\\n    <img height=\\\"75\\\" [popover]=\\\"sunglassesRef\\\" popoverPlacement=\\\"bottom-left\\\" src=\\\"assets/sunglasses.png\\\">\\n    <popover-content #sweatRef>\\n        <h2>ðŸ˜… Grinning Face With Sweat</h2>\\n        A face with a grin and smiling eyes similar to ðŸ˜„ <a href=\\\"https://emojipedia.org/smiling-face-with-open-mouth-and-smiling-eyes/\\\" target=\\\"_blank\\\">Grinning Face With Smiling Eyes</a> but with a single bead of forehead sweat over its left eye (right on WhatsApp). Intended to depict nerves or discomfort but commonly used as a means of expressing \\\"whew!\\\" or \\\"close call!\\\" that would be implied when a person wipes sweat from their brow in an exaggerated manner.\\n    </popover-content>\\n    <img height=\\\"75\\\" [popover]=\\\"sweatRef\\\" popoverPlacement=\\\"left\\\" src=\\\"assets/sweat.png\\\">\\n    <popover-content #thinkingRef>\\n        <h2>ðŸ¤” Thinking Face</h2>\\n        A face shown with a single finger and thumb resting on the chin, glancing upward. Used to indicate thinking, or deep thought.\\n    </popover-content>\\n    <img height=\\\"75\\\" [popover]=\\\"thinkingRef\\\" popoverPlacement=\\\"top-left\\\" src=\\\"assets/thinking.png\\\">\\n</div>\\n\\n<br/><br/>\\n<h3 class=\\\"text-center\\\">Click the emoji!</h3>\\n<div class=\\\"center-content\\\">\\n    <popover-content #tongueRef>\\n        <h2>ðŸ˜œ Winking Face With Tongue</h2>\\n        A face showing a stuck-out tongue, winking at the same time. Used in an attempt to be wacky, zany, or otherwise joking.\\n    </popover-content>\\n    <img height=\\\"75\\\" [popover]=\\\"tongueRef\\\" [popoverOnHover]=\\\"false\\\" src=\\\"assets/tongue.png\\\">\\n</div>\\n\\n<br/><br/>\\n<h3 class=\\\"text-center\\\">This popover is set to open on the bottom.</h3>\\n<p class=\\\"text-center\\\">if you scroll the emoji to the bottom of the viewport, it will auto reflect to the top.</p>\\n<p class=\\\"text-center\\\">scroll the page down to see it open on the bottom.</p>\\n<div class=\\\"center-content\\\">\\n    <popover-content #cryRef>\\n        <h2>ðŸ˜­ Loudly Crying Face</h2>\\n        A sad face with tears streaming down both cheeks. This face is distraught and inconsolable. Not to be confused with the <a href=\\\"https://emojipedia.org/face-with-tears-of-joy/\\\" target=\\\"_blank\\\">tears of joy emoji</a>.\\n    </popover-content>\\n    <img height=\\\"75\\\" [popover]=\\\"cryRef\\\" popoverPlacement=\\\"bottom\\\" src=\\\"assets/cry.png\\\">\\n</div>\\n\\n<div style=\\\"height: 500px;\\\"></div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PopoverModule } from 'ngx-smart-popover';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    PopoverModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}